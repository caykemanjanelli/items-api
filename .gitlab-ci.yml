###############################################
##### Pipeline Gitlab-CI - v1.0           #####
##### C&A Vikings            - 15/01/2019 #####
##### Setor:                              #####
###############################################

image: ${DOCKER_DIND}

services:
  - name: ${DOCKER_DIND}
    alias: dind
    command: ["--insecure-registry=registry.company.com.br:5005"]

stages:
  - check-image
  - test
  - build
  - build_container
  - deploy

# stages modularizados em outros projetos
include:
  - project: "arquitetura/modulos-gitlabci/modulos-padrao"
    file: "/ci-sonar-qube/mvn-sonar-qube-remote-settings.yml" # SonarQube com settings remoto
    ref: master

  - project: "arquitetura/modulos-gitlabci/modulos-padrao"
    file: "/extensions/base-extensions.yml" # Download settings.xml para uso no maven
    ref: master

variables:
  OPENSHIFT_PROJECT: "company-${CI_PROJECT_NAMESPACE}"
  GIT_SSL_NO_VERIFY: "1"
  #https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
  DOCKER_HOST: tcp://dind:2375
  # This will instruct Docker not to start over TLS.
  DOCKER_TLS_CERTDIR: ""

cache:
  paths:
    - .m2/repository/

check-env:
  image: ${IMAGE_DOCKER}
  stage: check-image
  script:
    - env
  only:
    - develop
    - /^[0-9]+.[0-9]+.[0-9]+$/

mvn-test:
  extends: .clone-mvn-settings
  image: ${IMAGE_DOCKER}
  stage: test
  script:
    - mvn $MAVEN_CLI_OPTS clean test
  allow_failure: true
  only:
    - develop
    - /^[0-9]+.[0-9]+.[0-9]+$/

mvn-package:
  extends: .clone-mvn-settings
  image: ${IMAGE_DOCKER}
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS package -Dmaven.test.skip=true
  only:
    - develop
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    when: always
    paths:
      - ./target/*.jar

mvn-deploy-nexus:
  extends: .clone-mvn-settings
  image: ${IMAGE_DOCKER}
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS deploy -Dmaven.test.skip=true
  allow_failure: true
  only:
    - /^[0-9]+.[0-9]+.[0-9]+$/
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    when: always
    paths:
      - ./target/*.jar

docker-build:
  stage: build_container
  before_script:
    - ls Dockerfile | xargs sed -i "s/CI_PROJECT_NAME/$CI_PROJECT_NAME/g"
  script:
    - env
    - echo $CI_COMMIT_BRANCH
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_BRANCH .
    - docker push  $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_BRANCH
  only:
    - develop

docker-build-tags:
  stage: build_container
  before_script:
    - ls Dockerfile | xargs sed -i "s/CI_PROJECT_NAME/$CI_PROJECT_NAME/g"
  script:
    - env
    - echo $CI_BUILD_TAG
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY/$CI_PROJECT_PATH:$CI_BUILD_TAG .
    - docker push  $CI_REGISTRY/$CI_PROJECT_PATH:$CI_BUILD_TAG
  only:
    - /^[0-9]+.[0-9]+.[0-9]+$/

homolog:
  stage: deploy
  image: "openshift/origin-cli"
  variables:
    CLUSTER: ocpvh1
  environment:
    name: homolog
    kubernetes:
      namespace: ${KUBE_NAMESPACE}
  before_script:
    - oc login --server=https://api.${CLUSTER}.company.com.br:6443 --token=${OCP_TOKEN_HOM} --insecure-skip-tls-verify
    - chmod +x ./deploy.sh
  script:
    - ./deploy.sh ${CI_COMMIT_BRANCH}
  only:
    - develop

production:
  stage: deploy
  image: "openshift/origin-cli"
  variables:
    CLUSTER: ocpvp1
  environment:
    name: production
    kubernetes:
      namespace: ${KUBE_NAMESPACE}
  when: manual
  before_script:
    - oc login --server=https://api.${CLUSTER}.company.com.br:6443 --token=${OCP_TOKEN_PRD} --insecure-skip-tls-verify
    - chmod +x ./deploy.sh
  script:
    - ./deploy.sh ${CI_BUILD_TAG}
  only:
    - /^[0-9]+.[0-9]+.[0-9]+$/
